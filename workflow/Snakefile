import json
from itertools import chain


include: "definitions.smk"


with open(build_dir / "runs.json", "r") as f:
    runs = json.load(f)

RUN_IDS = sorted(set(chain(*runs.values())))


ruleorder: plot_bayesian_blocks_lightcurve > plot_dl4


include: "rules/run_selection.smk"
include: "rules/create_dl3.smk"
include: "rules/post_dl3.smk"
include: "rules/bayesian_blocks.smk"

run_selection_plots = [
    build_dir / f"plots/{name}.pdf"
    for name in ["moon-illumination", "cosmics", "cosmics-above"]
]

irf_plots = [
    build_dir / f"plots/irf/{irf}_Run{run_id}.pdf"
    for irf in ("aeff", "edisp", "gh_cut", "radmax_cut")
    for run_id in RUN_IDS
]

analyses = [
    x.name for x in config_dir.iterdir() if x.name.startswith("analysis") and x.is_dir()
]

dl3_plots = [
    build_dir / f"plots/{plot}/{run_id}.pdf"
    for run_id in RUN_IDS + ["stacked"]
    for plot in ["theta2", "skymap", "skymap_dl3"]
]


# observation plots are arguably dl3
dl4_plots = [
    build_dir / f"plots/{analysis}/{plot}.pdf"
    for analysis in analyses
    for plot in [
        "sensitivity",
        "light_curve",
        "flux_points",
        "observation_plots",
        "bayesian_blocks",
        "bayesian_blocks_comparison",
        "dl4_diagnostics",
    ]
]


rule all:
    input:
    	run_selection_plots,
        dl3_plots,
        dl4_plots,
        irf_plots,
	build_dir / "plots/aic.pdf"

rule plot_aic:
    output:
        build_dir / "plots/aic.pdf",
    input:
        data=dl4_plots, # dummy to make sure datasets are there and fit happend
        rc=os.environ.get("MATPLOTLIBRC", config_dir / "matplotlibrc"),
        script="scripts/compare_aic.py",
    params:
        indirs = [build_dir / f"dl4/{analysis}" for analysis in analyses]
    conda:
        gammapy_env
    resources:
        time=5,
    shell:
        "MATPLOTLIBRC={input.rc} python {input.script} -i {params.indirs} -o {output}"

